// GENERATED by @edgedb/generate v0.5.5

import * as $ from "../reflection";
import * as _ from "../imports";
import type * as _std from "./std";
export type $Gender = {
  "Unknown": $.$expr_Literal<$Gender>;
  "Male": $.$expr_Literal<$Gender>;
  "Female": $.$expr_Literal<$Gender>;
} & $.EnumType<"default::Gender", ["Unknown", "Male", "Female"]>;
const Gender: $Gender = $.makeType<$Gender>(_.spec, "accc44e0-6b56-11ef-a84b-e34f55dd9957", _.syntax.literal);

export type $UserType = {
  "Unset": $.$expr_Literal<$UserType>;
  "Employee": $.$expr_Literal<$UserType>;
  "Customer": $.$expr_Literal<$UserType>;
  "ShopManager": $.$expr_Literal<$UserType>;
} & $.EnumType<"default::UserType", ["Unset", "Employee", "Customer", "ShopManager"]>;
const UserType: $UserType = $.makeType<$UserType>(_.spec, "ad579a4f-6b56-11ef-b6c2-f52b0bae678e", _.syntax.literal);

export type $BaseEntityλShape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
  "deletion_time": $.PropertyDesc<_std.$datetime, $.Cardinality.AtMostOne, false, false, false, false>;
  "is_enabled": $.PropertyDesc<_std.$bool, $.Cardinality.AtMostOne, false, false, false, true>;
  "is_deleted": $.PropertyDesc<_std.$bool, $.Cardinality.One, false, false, false, true>;
  "tenant_id": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, true>;
  "creation_time": $.PropertyDesc<_std.$datetime, $.Cardinality.AtMostOne, false, false, false, true>;
  "last_modification_time": $.PropertyDesc<_std.$datetime, $.Cardinality.AtMostOne, false, false, false, false>;
}>;
type $BaseEntity = $.ObjectType<"default::BaseEntity", $BaseEntityλShape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
]>;
const $BaseEntity = $.makeType<$BaseEntity>(_.spec, "ab1ab622-6b56-11ef-ac3e-b32b16646036", _.syntax.literal);

const BaseEntity: $.$expr_PathNode<$.TypeSet<$BaseEntity, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($BaseEntity, $.Cardinality.Many), null);

export type $ActivityλShape = $.typeutil.flatten<$BaseEntityλShape & {
  "end_time": $.PropertyDesc<_std.$datetime, $.Cardinality.AtMostOne, false, false, false, false>;
  "start_time": $.PropertyDesc<_std.$datetime, $.Cardinality.AtMostOne, false, false, false, true>;
  "title": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "coverUrl": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "address": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "content": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "description": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "max_count": $.PropertyDesc<_std.$int64, $.Cardinality.AtMostOne, false, false, false, false>;
  "customers": $.LinkDesc<$ActivityCustomer, $.Cardinality.Many, {}, false, true,  false, false>;
  "is_actived": $.PropertyDesc<_std.$bool, $.Cardinality.AtMostOne, false, false, false, true>;
  "bg_image": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "is_image_set": $.PropertyDesc<_std.$bool, $.Cardinality.AtMostOne, false, false, false, true>;
  "qrcode_rect": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "inviterConfigs": $.LinkDesc<$InviterConfig, $.Cardinality.Many, {}, false, true,  false, false>;
  "<activity[is ActivityCustomer]": $.LinkDesc<$ActivityCustomer, $.Cardinality.Many, {}, false, false,  false, false>;
  "<activity[is InviterConfig]": $.LinkDesc<$InviterConfig, $.Cardinality.Many, {}, false, false,  false, false>;
  "<activity": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Activity = $.ObjectType<"default::Activity", $ActivityλShape, null, [
  ...$BaseEntity['__exclusives__'],
]>;
const $Activity = $.makeType<$Activity>(_.spec, "abc5b574-6b56-11ef-896c-1bb4455da1d5", _.syntax.literal);

const Activity: $.$expr_PathNode<$.TypeSet<$Activity, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Activity, $.Cardinality.Many), null);

export type $ActivityCustomerλShape = $.typeutil.flatten<$BaseEntityλShape & {
  "customer_gender": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "customer_name": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "customer_phone": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "inviter_name": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "is_invited": $.PropertyDesc<_std.$bool, $.Cardinality.AtMostOne, false, false, false, true>;
  "remarks": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "activity": $.LinkDesc<$Activity, $.Cardinality.One, {}, false, false,  false, false>;
  "is_checked": $.PropertyDesc<_std.$bool, $.Cardinality.AtMostOne, false, false, false, true>;
  "is_gifted": $.PropertyDesc<_std.$bool, $.Cardinality.AtMostOne, false, false, false, true>;
  "is_signed": $.PropertyDesc<_std.$bool, $.Cardinality.AtMostOne, false, false, false, true>;
  "last_invite_time": $.PropertyDesc<_std.$datetime, $.Cardinality.AtMostOne, false, false, false, false>;
  "inviterConfig": $.LinkDesc<$InviterConfig, $.Cardinality.AtMostOne, {}, false, false,  false, false>;
  "inviterConfig_Name": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, true, false, false>;
  "activity_title": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, true, false, false>;
  "<customers[is Activity]": $.LinkDesc<$Activity, $.Cardinality.Many, {}, false, false,  false, false>;
  "<owner[is GiftLog]": $.LinkDesc<$GiftLog, $.Cardinality.Many, {}, false, false,  false, false>;
  "<owner[is SignLog]": $.LinkDesc<$SignLog, $.Cardinality.Many, {}, false, false,  false, false>;
  "<customers[is InviterConfig]": $.LinkDesc<$InviterConfig, $.Cardinality.Many, {}, false, false,  false, false>;
  "<customers": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<owner": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $ActivityCustomer = $.ObjectType<"default::ActivityCustomer", $ActivityCustomerλShape, null, [
  ...$BaseEntity['__exclusives__'],
]>;
const $ActivityCustomer = $.makeType<$ActivityCustomer>(_.spec, "ac781972-6b56-11ef-a5fd-9b2b3e3ef632", _.syntax.literal);

const ActivityCustomer: $.$expr_PathNode<$.TypeSet<$ActivityCustomer, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($ActivityCustomer, $.Cardinality.Many), null);

export type $GiftLogλShape = $.typeutil.flatten<$BaseEntityλShape & {
  "owner": $.LinkDesc<$ActivityCustomer, $.Cardinality.AtMostOne, {}, false, false,  false, false>;
  "customer_name": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "remarks": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
}>;
type $GiftLog = $.ObjectType<"default::GiftLog", $GiftLogλShape, null, [
  ...$BaseEntity['__exclusives__'],
]>;
const $GiftLog = $.makeType<$GiftLog>(_.spec, "b1586329-6b56-11ef-aef9-adeced62f00e", _.syntax.literal);

const GiftLog: $.$expr_PathNode<$.TypeSet<$GiftLog, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($GiftLog, $.Cardinality.Many), null);

export type $InviterConfigλShape = $.typeutil.flatten<$BaseEntityλShape & {
  "activity": $.LinkDesc<$Activity, $.Cardinality.One, {}, false, false,  false, false>;
  "inviter": $.LinkDesc<$User, $.Cardinality.One, {}, false, false,  false, false>;
  "max_count": $.PropertyDesc<_std.$int64, $.Cardinality.AtMostOne, false, false, false, false>;
  "customers": $.LinkDesc<$ActivityCustomer, $.Cardinality.Many, {}, false, true,  false, false>;
  "inviter_name": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, true, false, false>;
  "<inviterConfig[is ActivityCustomer]": $.LinkDesc<$ActivityCustomer, $.Cardinality.Many, {}, false, false,  false, false>;
  "<inviterConfigs[is Activity]": $.LinkDesc<$Activity, $.Cardinality.Many, {}, false, false,  false, false>;
  "<inviterConfig": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<inviterConfigs": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $InviterConfig = $.ObjectType<"default::InviterConfig", $InviterConfigλShape, null, [
  ...$BaseEntity['__exclusives__'],
  {inviter: {__element__: $User, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },activity: {__element__: $Activity, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
]>;
const $InviterConfig = $.makeType<$InviterConfig>(_.spec, "94800584-7587-11ef-a50a-b5cc147dbec7", _.syntax.literal);

const InviterConfig: $.$expr_PathNode<$.TypeSet<$InviterConfig, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($InviterConfig, $.Cardinality.Many), null);

export type $PermissionλShape = $.typeutil.flatten<$BaseEntityλShape & {
  "name": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "sorting": $.PropertyDesc<_std.$int64, $.Cardinality.AtMostOne, false, false, false, false>;
  "roles": $.LinkDesc<$RolePermission, $.Cardinality.Many, {}, false, true,  false, false>;
  "tag": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "code": $.PropertyDesc<_std.$str, $.Cardinality.One, true, false, false, false>;
  "<permission[is RolePermission]": $.LinkDesc<$RolePermission, $.Cardinality.Many, {}, false, false,  false, false>;
  "<permission": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Permission = $.ObjectType<"default::Permission", $PermissionλShape, null, [
  ...$BaseEntity['__exclusives__'],
  {code: {__element__: _std.$str, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
]>;
const $Permission = $.makeType<$Permission>(_.spec, "b26fb7fd-6b56-11ef-a88a-5fc1a1133e82", _.syntax.literal);

const Permission: $.$expr_PathNode<$.TypeSet<$Permission, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Permission, $.Cardinality.Many), null);

export type $RoleλShape = $.typeutil.flatten<$BaseEntityλShape & {
  "name": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "is_default": $.PropertyDesc<_std.$bool, $.Cardinality.AtMostOne, false, false, false, true>;
  "is_public": $.PropertyDesc<_std.$bool, $.Cardinality.AtMostOne, false, false, false, true>;
  "is_static": $.PropertyDesc<_std.$bool, $.Cardinality.AtMostOne, false, false, false, true>;
  "users": $.LinkDesc<$UserRole, $.Cardinality.Many, {}, false, true,  false, false>;
  "permissions": $.LinkDesc<$RolePermission, $.Cardinality.Many, {}, false, true,  false, false>;
  "code": $.PropertyDesc<_std.$str, $.Cardinality.One, true, false, false, false>;
  "sorting": $.PropertyDesc<_std.$int64, $.Cardinality.AtMostOne, false, false, false, false>;
  "<role[is UserRole]": $.LinkDesc<$UserRole, $.Cardinality.Many, {}, false, false,  false, false>;
  "<role[is RolePermission]": $.LinkDesc<$RolePermission, $.Cardinality.Many, {}, false, false,  false, false>;
  "<role": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Role = $.ObjectType<"default::Role", $RoleλShape, null, [
  ...$BaseEntity['__exclusives__'],
  {code: {__element__: _std.$str, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
]>;
const $Role = $.makeType<$Role>(_.spec, "b273c8ba-6b56-11ef-b171-596bad950803", _.syntax.literal);

const Role: $.$expr_PathNode<$.TypeSet<$Role, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Role, $.Cardinality.Many), null);

export type $RolePermissionλShape = $.typeutil.flatten<$BaseEntityλShape & {
  "permission": $.LinkDesc<$Permission, $.Cardinality.One, {}, false, false,  false, false>;
  "role": $.LinkDesc<$Role, $.Cardinality.One, {}, false, false,  false, false>;
  "permission_code": $.PropertyDesc<_std.$str, $.Cardinality.One, false, true, false, false>;
  "permission_name": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, true, false, false>;
  "role_code": $.PropertyDesc<_std.$str, $.Cardinality.One, false, true, false, false>;
  "role_name": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, true, false, false>;
  "<permissions[is Role]": $.LinkDesc<$Role, $.Cardinality.Many, {}, false, false,  false, false>;
  "<roles[is Permission]": $.LinkDesc<$Permission, $.Cardinality.Many, {}, false, false,  false, false>;
  "<permissions": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<roles": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $RolePermission = $.ObjectType<"default::RolePermission", $RolePermissionλShape, null, [
  ...$BaseEntity['__exclusives__'],
  {permission: {__element__: $Permission, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },role: {__element__: $Role, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
]>;
const $RolePermission = $.makeType<$RolePermission>(_.spec, "b3ca8faa-6b56-11ef-870f-c1c974b5e43c", _.syntax.literal);

const RolePermission: $.$expr_PathNode<$.TypeSet<$RolePermission, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($RolePermission, $.Cardinality.Many), null);

export type $SignLogλShape = $.typeutil.flatten<$BaseEntityλShape & {
  "owner": $.LinkDesc<$ActivityCustomer, $.Cardinality.AtMostOne, {}, false, false,  false, false>;
  "customer_name": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "remarks": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
}>;
type $SignLog = $.ObjectType<"default::SignLog", $SignLogλShape, null, [
  ...$BaseEntity['__exclusives__'],
]>;
const $SignLog = $.makeType<$SignLog>(_.spec, "b15cb5e1-6b56-11ef-bfd9-51182fa2da1a", _.syntax.literal);

const SignLog: $.$expr_PathNode<$.TypeSet<$SignLog, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($SignLog, $.Cardinality.Many), null);

export type $UserλShape = $.typeutil.flatten<$BaseEntityλShape & {
  "gender": $.PropertyDesc<$Gender, $.Cardinality.AtMostOne, false, false, false, true>;
  "name": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "phone": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "user_type": $.PropertyDesc<$UserType, $.Cardinality.AtMostOne, false, false, false, true>;
  "erp_user_id": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "roles": $.LinkDesc<$UserRole, $.Cardinality.Many, {}, false, true,  false, false>;
  "account": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "password": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "<user[is UserRole]": $.LinkDesc<$UserRole, $.Cardinality.Many, {}, false, false,  false, false>;
  "<inviter[is InviterConfig]": $.LinkDesc<$InviterConfig, $.Cardinality.Many, {}, false, false,  false, false>;
  "<inviter": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<user": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $User = $.ObjectType<"default::User", $UserλShape, null, [
  ...$BaseEntity['__exclusives__'],
  {account: {__element__: _std.$str, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },erp_user_id: {__element__: _std.$str, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
]>;
const $User = $.makeType<$User>(_.spec, "ad06775d-6b56-11ef-b6a4-09127c794d84", _.syntax.literal);

const User: $.$expr_PathNode<$.TypeSet<$User, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($User, $.Cardinality.Many), null);

export type $UserRoleλShape = $.typeutil.flatten<$BaseEntityλShape & {
  "role": $.LinkDesc<$Role, $.Cardinality.One, {}, false, false,  false, false>;
  "user": $.LinkDesc<$User, $.Cardinality.One, {}, false, false,  false, false>;
  "role_name": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, true, false, false>;
  "user_name": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, true, false, false>;
  "<roles[is User]": $.LinkDesc<$User, $.Cardinality.Many, {}, false, false,  false, false>;
  "<users[is Role]": $.LinkDesc<$Role, $.Cardinality.Many, {}, false, false,  false, false>;
  "<roles[is current_user]": $.LinkDesc<$current_user, $.Cardinality.Many, {}, false, false,  false, false>;
  "<roles": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<users": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $UserRole = $.ObjectType<"default::UserRole", $UserRoleλShape, null, [
  ...$BaseEntity['__exclusives__'],
  {user: {__element__: $User, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },role: {__element__: $Role, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
]>;
const $UserRole = $.makeType<$UserRole>(_.spec, "b34fd9a6-6b56-11ef-a472-23b785e169f8", _.syntax.literal);

const UserRole: $.$expr_PathNode<$.TypeSet<$UserRole, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($UserRole, $.Cardinality.Many), null);

export type $current_userλShape = $.typeutil.flatten<$UserλShape & {
}>;
type $current_user = $.ObjectType<"default::current_user", $current_userλShape, null, [
  ...$User['__exclusives__'],
]>;
const $current_user = $.makeType<$current_user>(_.spec, "af1a4531-6b56-11ef-be7d-510f26dde7c8", _.syntax.literal);

const current_user: $.$expr_PathNode<$.TypeSet<$current_user, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($current_user, $.Cardinality.Many), null);

const $default__globals: {  current_user: _.syntax.$expr_Global<
              // "default::current_user",
              $current_user,
              $.Cardinality.AtMostOne
              >,  current_user_id: _.syntax.$expr_Global<
              // "default::current_user_id",
              _std.$uuid,
              $.Cardinality.AtMostOne
              >,  tenant_id: _.syntax.$expr_Global<
              // "default::tenant_id",
              _std.$str,
              $.Cardinality.One
              >} = {  current_user: _.syntax.makeGlobal(
              "default::current_user",
              $.makeType(_.spec, "af1a4531-6b56-11ef-be7d-510f26dde7c8", _.syntax.literal),
              $.Cardinality.AtMostOne) as any,  current_user_id: _.syntax.makeGlobal(
              "default::current_user_id",
              $.makeType(_.spec, "00000000-0000-0000-0000-000000000100", _.syntax.literal),
              $.Cardinality.AtMostOne) as any,  tenant_id: _.syntax.makeGlobal(
              "default::tenant_id",
              $.makeType(_.spec, "00000000-0000-0000-0000-000000000101", _.syntax.literal),
              $.Cardinality.One) as any};



export { Gender, UserType, $BaseEntity, BaseEntity, $Activity, Activity, $ActivityCustomer, ActivityCustomer, $GiftLog, GiftLog, $InviterConfig, InviterConfig, $Permission, Permission, $Role, Role, $RolePermission, RolePermission, $SignLog, SignLog, $User, User, $UserRole, UserRole, $current_user, current_user };

type __defaultExports = {
  "Gender": typeof Gender;
  "UserType": typeof UserType;
  "BaseEntity": typeof BaseEntity;
  "Activity": typeof Activity;
  "ActivityCustomer": typeof ActivityCustomer;
  "GiftLog": typeof GiftLog;
  "InviterConfig": typeof InviterConfig;
  "Permission": typeof Permission;
  "Role": typeof Role;
  "RolePermission": typeof RolePermission;
  "SignLog": typeof SignLog;
  "User": typeof User;
  "UserRole": typeof UserRole;
  "current_user": typeof current_user;
  "global": typeof $default__globals
};
const __defaultExports: __defaultExports = {
  "Gender": Gender,
  "UserType": UserType,
  "BaseEntity": BaseEntity,
  "Activity": Activity,
  "ActivityCustomer": ActivityCustomer,
  "GiftLog": GiftLog,
  "InviterConfig": InviterConfig,
  "Permission": Permission,
  "Role": Role,
  "RolePermission": RolePermission,
  "SignLog": SignLog,
  "User": User,
  "UserRole": UserRole,
  "current_user": current_user,
  "global": $default__globals
};
export default __defaultExports;
