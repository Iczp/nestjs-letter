// GENERATED by @edgedb/generate v0.5.5

import * as $ from "../reflection";
import * as _ from "../imports";
import type * as _std from "./std";
export type $Gender = {
  "Unknown": $.$expr_Literal<$Gender>;
  "Male": $.$expr_Literal<$Gender>;
  "Female": $.$expr_Literal<$Gender>;
} & $.EnumType<"default::Gender", ["Unknown", "Male", "Female"]>;
const Gender: $Gender = $.makeType<$Gender>(_.spec, "bf3e1501-6200-11ef-8bab-a7b4a26ba987", _.syntax.literal);

export type $UserType = {
  "Unset": $.$expr_Literal<$UserType>;
  "Employee": $.$expr_Literal<$UserType>;
  "Customer": $.$expr_Literal<$UserType>;
  "ShopManager": $.$expr_Literal<$UserType>;
} & $.EnumType<"default::UserType", ["Unset", "Employee", "Customer", "ShopManager"]>;
const UserType: $UserType = $.makeType<$UserType>(_.spec, "4ec22418-6345-11ef-b566-49f1b6c96c45", _.syntax.literal);

export type $BaseEntityλShape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
  "creation_time": $.PropertyDesc<_std.$datetime, $.Cardinality.AtMostOne, false, false, false, true>;
  "deletion_time": $.PropertyDesc<_std.$datetime, $.Cardinality.AtMostOne, false, false, false, false>;
  "last_modification_time": $.PropertyDesc<_std.$datetime, $.Cardinality.AtMostOne, false, false, false, false>;
  "is_enabled": $.PropertyDesc<_std.$bool, $.Cardinality.AtMostOne, false, false, false, true>;
  "is_deleted": $.PropertyDesc<_std.$bool, $.Cardinality.One, false, false, false, true>;
  "tenant_id": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, true>;
}>;
type $BaseEntity = $.ObjectType<"default::BaseEntity", $BaseEntityλShape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
]>;
const $BaseEntity = $.makeType<$BaseEntity>(_.spec, "b0ef2498-61f8-11ef-be4c-43c8ad3aa7da", _.syntax.literal);

const BaseEntity: $.$expr_PathNode<$.TypeSet<$BaseEntity, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($BaseEntity, $.Cardinality.Many), null);

export type $ActivityλShape = $.typeutil.flatten<$BaseEntityλShape & {
  "end_time": $.PropertyDesc<_std.$datetime, $.Cardinality.AtMostOne, false, false, false, false>;
  "start_time": $.PropertyDesc<_std.$datetime, $.Cardinality.AtMostOne, false, false, false, true>;
  "title": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "coverUrl": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "address": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "content": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "description": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "max_count": $.PropertyDesc<_std.$int64, $.Cardinality.AtMostOne, false, false, false, false>;
  "customers": $.LinkDesc<$ActivityCustomer, $.Cardinality.Many, {}, false, true,  false, false>;
  "is_actived": $.PropertyDesc<_std.$bool, $.Cardinality.AtMostOne, false, false, false, true>;
  "<activity[is ActivityCustomer]": $.LinkDesc<$ActivityCustomer, $.Cardinality.Many, {}, false, false,  false, false>;
  "<activity": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Activity = $.ObjectType<"default::Activity", $ActivityλShape, null, [
  ...$BaseEntity['__exclusives__'],
]>;
const $Activity = $.makeType<$Activity>(_.spec, "5c4e7ce5-61f9-11ef-96bc-3d7a45244bf1", _.syntax.literal);

const Activity: $.$expr_PathNode<$.TypeSet<$Activity, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Activity, $.Cardinality.Many), null);

export type $ActivityCustomerλShape = $.typeutil.flatten<$BaseEntityλShape & {
  "customer": $.LinkDesc<$Customer, $.Cardinality.AtMostOne, {}, false, false,  false, false>;
  "inviter": $.LinkDesc<$ShopManager, $.Cardinality.AtMostOne, {}, false, false,  false, false>;
  "customer_gender": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "customer_name": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "customer_phone": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "inviter_name": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "is_invited": $.PropertyDesc<_std.$bool, $.Cardinality.AtMostOne, false, false, false, true>;
  "remarks": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "activity": $.LinkDesc<$Activity, $.Cardinality.One, {}, false, false,  false, false>;
  "is_checked": $.PropertyDesc<_std.$bool, $.Cardinality.AtMostOne, false, false, false, true>;
  "is_gifted": $.PropertyDesc<_std.$bool, $.Cardinality.AtMostOne, false, false, false, true>;
  "is_signed": $.PropertyDesc<_std.$bool, $.Cardinality.AtMostOne, false, false, false, true>;
  "last_invite_time": $.PropertyDesc<_std.$datetime, $.Cardinality.AtMostOne, false, false, false, false>;
  "<activities[is Customer]": $.LinkDesc<$Customer, $.Cardinality.Many, {}, false, false,  false, false>;
  "<customers[is Activity]": $.LinkDesc<$Activity, $.Cardinality.Many, {}, false, false,  false, false>;
  "<owner[is GiftLog]": $.LinkDesc<$GiftLog, $.Cardinality.Many, {}, false, false,  false, false>;
  "<owner[is SignLog]": $.LinkDesc<$SignLog, $.Cardinality.Many, {}, false, false,  false, false>;
  "<activities": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<customers": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<owner": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $ActivityCustomer = $.ObjectType<"default::ActivityCustomer", $ActivityCustomerλShape, null, [
  ...$BaseEntity['__exclusives__'],
]>;
const $ActivityCustomer = $.makeType<$ActivityCustomer>(_.spec, "8d5fdf89-61fa-11ef-9470-1dce793282d2", _.syntax.literal);

const ActivityCustomer: $.$expr_PathNode<$.TypeSet<$ActivityCustomer, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($ActivityCustomer, $.Cardinality.Many), null);

export type $UserλShape = $.typeutil.flatten<$BaseEntityλShape & {
  "gender": $.PropertyDesc<$Gender, $.Cardinality.AtMostOne, false, false, false, true>;
  "name": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "phone": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "user_type": $.PropertyDesc<$UserType, $.Cardinality.AtMostOne, false, false, false, true>;
  "erp_user_id": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
}>;
type $User = $.ObjectType<"default::User", $UserλShape, null, [
  ...$BaseEntity['__exclusives__'],
]>;
const $User = $.makeType<$User>(_.spec, "7b5c8768-6202-11ef-a03a-1f6d28d9fa6b", _.syntax.literal);

const User: $.$expr_PathNode<$.TypeSet<$User, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($User, $.Cardinality.Many), null);

export type $CustomerλShape = $.typeutil.flatten<Omit<$UserλShape, "user_type"> & {
  "activities": $.LinkDesc<$ActivityCustomer, $.Cardinality.Many, {}, false, false,  false, false>;
  "shopCode": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "shopName": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "user_type": $.PropertyDesc<$UserType, $.Cardinality.AtMostOne, false, false, false, true>;
  "<customer[is ActivityCustomer]": $.LinkDesc<$ActivityCustomer, $.Cardinality.Many, {}, false, false,  false, false>;
  "<customer": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Customer = $.ObjectType<"default::Customer", $CustomerλShape, null, [
  ...$User['__exclusives__'],
]>;
const $Customer = $.makeType<$Customer>(_.spec, "5c5346f6-61f9-11ef-b205-3d25473dc9e3", _.syntax.literal);

const Customer: $.$expr_PathNode<$.TypeSet<$Customer, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Customer, $.Cardinality.Many), null);

export type $GiftLogλShape = $.typeutil.flatten<$BaseEntityλShape & {
  "owner": $.LinkDesc<$ActivityCustomer, $.Cardinality.AtMostOne, {}, false, false,  false, false>;
  "customer_name": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "remarks": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
}>;
type $GiftLog = $.ObjectType<"default::GiftLog", $GiftLogλShape, null, [
  ...$BaseEntity['__exclusives__'],
]>;
const $GiftLog = $.makeType<$GiftLog>(_.spec, "d30875ff-65aa-11ef-919c-e5685a18e76d", _.syntax.literal);

const GiftLog: $.$expr_PathNode<$.TypeSet<$GiftLog, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($GiftLog, $.Cardinality.Many), null);

export type $ShopManagerλShape = $.typeutil.flatten<Omit<$UserλShape, "user_type"> & {
  "positionName": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "user_type": $.PropertyDesc<$UserType, $.Cardinality.AtMostOne, false, false, false, true>;
  "<inviter[is ActivityCustomer]": $.LinkDesc<$ActivityCustomer, $.Cardinality.Many, {}, false, false,  false, false>;
  "<inviter": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $ShopManager = $.ObjectType<"default::ShopManager", $ShopManagerλShape, null, [
  ...$User['__exclusives__'],
]>;
const $ShopManager = $.makeType<$ShopManager>(_.spec, "4ec3264a-6345-11ef-ab69-99615cfc790c", _.syntax.literal);

const ShopManager: $.$expr_PathNode<$.TypeSet<$ShopManager, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($ShopManager, $.Cardinality.Many), null);

export type $SignLogλShape = $.typeutil.flatten<$BaseEntityλShape & {
  "owner": $.LinkDesc<$ActivityCustomer, $.Cardinality.AtMostOne, {}, false, false,  false, false>;
  "customer_name": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "remarks": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
}>;
type $SignLog = $.ObjectType<"default::SignLog", $SignLogλShape, null, [
  ...$BaseEntity['__exclusives__'],
]>;
const $SignLog = $.makeType<$SignLog>(_.spec, "d30d70fb-65aa-11ef-864e-eb245ad97d11", _.syntax.literal);

const SignLog: $.$expr_PathNode<$.TypeSet<$SignLog, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($SignLog, $.Cardinality.Many), null);

export type $current_userλShape = $.typeutil.flatten<$UserλShape & {
}>;
type $current_user = $.ObjectType<"default::current_user", $current_userλShape, null, [
  ...$User['__exclusives__'],
]>;
const $current_user = $.makeType<$current_user>(_.spec, "66b80734-6448-11ef-9873-cdacbcaf5ca6", _.syntax.literal);

const current_user: $.$expr_PathNode<$.TypeSet<$current_user, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($current_user, $.Cardinality.Many), null);

const $default__globals: {  current_user: _.syntax.$expr_Global<
              // "default::current_user",
              $current_user,
              $.Cardinality.AtMostOne
              >,  current_user_id: _.syntax.$expr_Global<
              // "default::current_user_id",
              _std.$uuid,
              $.Cardinality.AtMostOne
              >,  tenant_id: _.syntax.$expr_Global<
              // "default::tenant_id",
              _std.$str,
              $.Cardinality.One
              >} = {  current_user: _.syntax.makeGlobal(
              "default::current_user",
              $.makeType(_.spec, "66b80734-6448-11ef-9873-cdacbcaf5ca6", _.syntax.literal),
              $.Cardinality.AtMostOne) as any,  current_user_id: _.syntax.makeGlobal(
              "default::current_user_id",
              $.makeType(_.spec, "00000000-0000-0000-0000-000000000100", _.syntax.literal),
              $.Cardinality.AtMostOne) as any,  tenant_id: _.syntax.makeGlobal(
              "default::tenant_id",
              $.makeType(_.spec, "00000000-0000-0000-0000-000000000101", _.syntax.literal),
              $.Cardinality.One) as any};



export { Gender, UserType, $BaseEntity, BaseEntity, $Activity, Activity, $ActivityCustomer, ActivityCustomer, $User, User, $Customer, Customer, $GiftLog, GiftLog, $ShopManager, ShopManager, $SignLog, SignLog, $current_user, current_user };

type __defaultExports = {
  "Gender": typeof Gender;
  "UserType": typeof UserType;
  "BaseEntity": typeof BaseEntity;
  "Activity": typeof Activity;
  "ActivityCustomer": typeof ActivityCustomer;
  "User": typeof User;
  "Customer": typeof Customer;
  "GiftLog": typeof GiftLog;
  "ShopManager": typeof ShopManager;
  "SignLog": typeof SignLog;
  "current_user": typeof current_user;
  "global": typeof $default__globals
};
const __defaultExports: __defaultExports = {
  "Gender": Gender,
  "UserType": UserType,
  "BaseEntity": BaseEntity,
  "Activity": Activity,
  "ActivityCustomer": ActivityCustomer,
  "User": User,
  "Customer": Customer,
  "GiftLog": GiftLog,
  "ShopManager": ShopManager,
  "SignLog": SignLog,
  "current_user": current_user,
  "global": $default__globals
};
export default __defaultExports;
